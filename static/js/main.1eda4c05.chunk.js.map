{"version":3,"sources":["logo.svg","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","messaging","App","useState","show","setShow","title","body","notification","setNotification","isTokenFound","setTokenFound","getToken","vapidKey","then","currentToken","console","log","catch","err","Promise","resolve","onMessage","payload","className","Toast","onClose","delay","autohide","animation","style","position","top","right","minWidth","Header","src","alt","Body","logo","Button","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAe,MAA0B,iC,sBCYzCA,IAASC,cATc,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAIT,IAAMC,EAAYR,IAASQ,Y,+BC2CZC,MAjDf,WACE,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwCF,mBAAS,CAAEG,MAAO,GAAIC,KAAM,KAApE,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAcA,ODTsB,SAACC,GAChBV,EACJW,SAAS,CACRC,SACE,4FAEHC,MAAK,SAACC,GACDA,GACFC,QAAQC,IAAI,6BAA8BF,GAC1CJ,GAAc,KAIdK,QAAQC,IACN,wEAEFN,GAAc,OAIjBO,OAAM,SAACC,GACNH,QAAQC,IAAI,6CAA8CE,MCzB9DP,CADA,MDgCA,IAAIQ,SAAQ,SAACC,GACXpB,EAAUqB,WAAU,SAACC,GACnBF,EAAQE,SC9BTT,MAAK,SAACS,GACLlB,GAAQ,GACRI,EAAgB,CACdH,MAAOiB,EAAQf,aAAaF,MAC5BC,KAAMgB,EAAQf,aAAaD,OAE7BS,QAAQC,IAAIM,MAEbL,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAI,WAAYE,MAGxC,sBAAKK,UAAU,MAAf,UACE,eAACC,EAAA,EAAD,CACEC,QAAS,kBAAMrB,GAAQ,IACvBD,KAAMA,EACNuB,MAAO,IACPC,UAAQ,EACRC,WAAS,EACTC,MAAO,CACLC,SAAU,WACVC,IAAK,GACLC,MAAO,GACPC,SAAU,KAVd,UAaE,eAACT,EAAA,EAAMU,OAAP,WACE,qBAAKC,IAAI,2BAA2BZ,UAAU,eAAea,IAAI,KACjE,wBAAQb,UAAU,UAAlB,SAA6BhB,EAAaF,QAC1C,gDAEF,cAACmB,EAAA,EAAMa,KAAP,UAAa9B,EAAaD,UAE5B,yBAAQiB,UAAU,aAAlB,UACGd,GAAgB,6FACfA,GAAgB,6EAClB,qBAAK0B,IAAKG,EAAMf,UAAU,WAAWa,IAAI,SACzC,cAACG,EAAA,EAAD,CAAQC,QAAS,kBAAMpC,GAAQ,IAA/B,+BCtCOqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1eda4c05.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyACr9U6fd3aeaz21gy-UFV2MzjOUPGatoI\",\r\n  authDomain: \"manager-notify-test.firebaseapp.com\",\r\n  projectId: \"manager-notify-test\",\r\n  storageBucket: \"manager-notify-test.appspot.com\",\r\n  messagingSenderId: \"930188761326\",\r\n  appId: \"1:930188761326:web:484eb055eaf3269d573bff\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst messaging = firebase.messaging();\r\n\r\nexport const getToken = (setTokenFound) => {\r\n  return messaging\r\n    .getToken({\r\n      vapidKey:\r\n        \"BI-3BYjpXoDqFlTi3793Tv70HZ2MqXN580mz9uR_KTtLxkX-j5efz4w-W6Sfyu33a9k4FZax8hUtvT5lp6GKO5w\",\r\n    })\r\n    .then((currentToken) => {\r\n      if (currentToken) {\r\n        console.log(\"current token for client: \", currentToken);\r\n        setTokenFound(true);\r\n        // Track the token -> client mapping, by sending to backend server\r\n        // show on the UI that permission is secured\r\n      } else {\r\n        console.log(\r\n          \"No registration token available. Request permission to generate one.\"\r\n        );\r\n        setTokenFound(false);\r\n        // shows on the UI that permission is required\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"An error occurred while retrieving token. \", err);\r\n      // catch error while creating client token\r\n    });\r\n};\r\n\r\nexport const onMessageListener = () =>\r\n  new Promise((resolve) => {\r\n    messaging.onMessage((payload) => {\r\n      resolve(payload);\r\n    });\r\n  });\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { getToken, onMessageListener } from \"./firebase\";\nimport { Button, Row, Col, Toast } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [show, setShow] = useState(false);\n  const [notification, setNotification] = useState({ title: \"\", body: \"\" });\n  const [isTokenFound, setTokenFound] = useState(false);\n  getToken(setTokenFound);\n\n  onMessageListener()\n    .then((payload) => {\n      setShow(true);\n      setNotification({\n        title: payload.notification.title,\n        body: payload.notification.body,\n      });\n      console.log(payload);\n    })\n    .catch((err) => console.log(\"failed: \", err));\n\n  return (\n    <div className=\"App\">\n      <Toast\n        onClose={() => setShow(false)}\n        show={show}\n        delay={3000}\n        autohide\n        animation\n        style={{\n          position: \"absolute\",\n          top: 20,\n          right: 20,\n          minWidth: 200,\n        }}\n      >\n        <Toast.Header>\n          <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n          <strong className=\"mr-auto\">{notification.title}</strong>\n          <small>just now</small>\n        </Toast.Header>\n        <Toast.Body>{notification.body}</Toast.Body>\n      </Toast>\n      <header className=\"App-header\">\n        {isTokenFound && <h1> Notification permission enabled üëçüèª </h1>}\n        {!isTokenFound && <h1> Need notification permission ‚ùóÔ∏è </h1>}\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Button onClick={() => setShow(true)}>Show Toast</Button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}